((('cat () (exp ys) (exp K)) (& (,K ,ys)))
 (('cat ((exp x) exp xs) (exp ys) (exp K)) (& (cat ,xs ,ys (catK ,x ,K))))
 ((('catK (exp x) (exp k)) (exp v)) (& (,k (,x unquote v))))
 (('name (sym k) (exp v) (exp dict) (exp K))
  (& (,K ((,k unquote v) unquote dict))))
 (('forget (sym k) (((sym k) . _) exp dict) (exp K)) (& (,K ,dict)))
 (('forget (sym k) ((exp kv) exp dict) (exp K))
  (& (forget ,k ,dict (forgetK ,kv ,K))))
 ((('forgetK (exp kv) (exp K)) (exp x)) (& (,K (,kv unquote x))))
 (('lookup (sym k) (((sym k) exp v) . _) (exp K)) (& (,K ,v)))
 (('lookup (sym k) (_ exp dict) (exp K)) (& (lookup ,k ,dict ,K)))
 (('run-drc (exp program) (exp inputs)) (& (=>* () ,inputs ,program)))
 (('=>* (exp D) ((exp e) exp R) (('NAME (sym n)) exp C))
  (& (name ,n ,e ,D (=>*DK ,R ,C))))
 (('=>* (exp D) (exp R) (('FORGET (sym n)) exp C))
  (& (forget ,n ,D (=>*DK ,R ,C))))
 (('=>* (exp D) (exp R) (('LOOKUP (sym n)) exp C))
  (& (lookup ,n ,D (=>*RK ,D ,R ,C))))
 ((('=>*DK (exp R) (exp C)) (exp D)) (& (=>* ,D ,R ,C)))
 ((('=>*CK (exp R) (exp D)) (exp C)) (& (=>* ,D ,R ,C)))
 ((('=>*RK (exp D) (exp R) (exp C)) (exp r)) (& (=>* ,D (,r unquote R) ,C)))
 (('=>* (exp D) (exp R) (('CONST (exp e)) exp C))
  (& (=>* ,D (,e unquote R) ,C)))
 (('=>* (exp D) (exp R) (('PROC (exp p)) exp C))
  (& (=>* ,D (,p unquote R) ,C)))
 (('=>* (exp D) ((exp h) (exp t) exp R) (('CONS) exp C))
  (& (=>* ,D ((,h unquote t) unquote R) ,C)))
 (('=>* (exp D) (((exp h) exp t) exp R) (('CAR) exp C))
  (& (=>* ,D (,h unquote R) ,C)))
 (('=>* (exp D) (((exp h) exp t) exp R) (('CDR) exp C))
  (& (=>* ,D (,t unquote R) ,C)))
 (('=>* (exp D) ((exp e) (exp e) exp R) (('EQ?) exp C))
  (& (=>* ,D (T unquote R) ,C)))
 (('=>* (exp D) (_ _ exp R) (('EQ?) exp C)) (& (=>* ,D (() unquote R) ,C)))
 (('=>* (exp D) (((exp h) exp t) exp R) (('ATOM?) exp C))
  (& (=>* ,D (() unquote R) ,C)))
 (('=>* (exp D) (_ exp R) (('ATOM?) exp C)) (& (=>* ,D (T unquote R) ,C)))
 (('=>* (exp D) ((num n) exp R) (('NUM?) exp C)) (& (=>* ,D (T unquote R) ,C)))
 (('=>* (exp D) (_ exp R) (('NUM?) exp C)) (& (=>* ,D (() unquote R) ,C)))
 (('=>* (exp D) ((sym s) exp R) (('SYM?) exp C)) (& (=>* ,D (T unquote R) ,C)))
 (('=>* (exp D) (_ exp R) (('SYM?) exp C)) (& (=>* ,D (() unquote R) ,C)))
 (('=>* (exp D) ((exp n) (exp m) exp R) (('PLUS) exp C))
  (& (=>* ,D (,(+ n m) unquote R) ,C)))
 (('=>* (exp D) ((exp n) (exp m) exp R) (('MINUS) exp C))
  (& (=>* ,D (,(- n m) unquote R) ,C)))
 (('=>* (exp D) ((exp n) (exp m) exp R) (('TIMES) exp C))
  (& (=>* ,D (,(* n m) unquote R) ,C)))
 (('=>* (exp D) (() exp R) (('SELECT (exp p) (exp p*)) exp C))
  (& (cat ,p* ,C (=>*CK ,R ,D))))
 (('=>* (exp D) (_ exp R) (('SELECT (exp p) (exp p*)) exp C))
  (& (cat ,p ,C (=>*CK ,R ,D))))
 (('=>* (exp D) ((exp p) exp R) (('APPLY) exp C))
  (& (cat ,p ,C (=>*CK ,R ,D))))
 (('=>* (exp D) ((exp e) exp R) ()) e)
 (('mk-example)
  `((PROC ((NAME xs)
           (NAME ys)
           (LOOKUP xs)
           (CONST ())
           (EQ?)
           (SELECT
            ((LOOKUP ys))
            ((LOOKUP ys)
             (LOOKUP xs)
             (CDR)
             (LOOKUP apd)
             (APPLY)
             (LOOKUP xs)
             (CAR)
             (CONS)))
           (FORGET ys)
           (FORGET xs)))
    (NAME apd)
    (LOOKUP apd)
    (APPLY)))
 (('run-test) (& (run-drc ,(& (mk-example)) ((q w e) (a s d)))))
 (('run-test2 (exp xs) (exp ys)) (& (run-drc ,(& (mk-example)) (,xs ,ys))))
 (('id (exp x)) x))
